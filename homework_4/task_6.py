# Напишите функцию, которая принимает кортеж num_tuple из 10 цифр num_tuple,
# и возвращает строку этих чисел в виде номера телефона str_phone.
# Например (Ввод --> Вывод) :
# (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)  => "(123) 456-7890"

def create_phone_number(num_tuple):
    str_phone =''


    """первый вариант
    заполняем строку исходными данными и редактируем её под номер телефона"""
    # for i in range(len(num_tuple)):
    #     str_phone += str(num_tuple[i])
    # str_phone = '(' + str_phone[:3] + ') ' + str_phone[3:6] + '-' + str_phone[6:]

    """второй варинат
    заполняем строку сразу же с символами под номер телефона, так показалось более универсально, 
    но так же более громоздко"""
    for i in range(len(num_tuple)):
        if i == 0:
            str_phone = '(' + str(num_tuple[i])
        elif i == 3:
            str_phone += ') ' + str(num_tuple[i])
        elif i == 6:
            str_phone += '-' + str(num_tuple[i])
        else:
            str_phone += str(num_tuple[i])

    """можно решить другим вариантом просто заполнив строку через цикл и вторым действием 
    вставить в подходящие места нужные символы под номер телефона, вариант который оставил более универсальный"""
    return str_phone

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    (1, 2, 3, 4, 5, 6, 7, 8, 9, 0),
    (1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
    (0, 2, 3, 0, 5, 6, 0, 8, 9, 0),
    (0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
]

test_data = [
    "(123) 456-7890", "(111) 111-1111", "(023) 056-0890", "(000) 000-0000"
]


for i, d in enumerate(data):
    assert create_phone_number(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')

